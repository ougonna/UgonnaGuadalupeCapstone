openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
paths:
  /tshirts:
    get:
      tags:
        - tshirt-controller
      operationId: getAllTshirt
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tshirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    put:
      tags:
        - tshirt-controller
      operationId: updateTshirt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tshirt'
        required: true
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - tshirt-controller
      operationId: createTshirt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tshirt'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tshirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  /games:
    get:
      tags:
        - games-controller
      operationId: getAllGames
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Games'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    put:
      tags:
        - games-controller
      operationId: updateGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Games'
        required: true
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - games-controller
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Games'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Games'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  /consoles:
    get:
      tags:
        - console-controller
      operationId: getAllConsoles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    put:
      tags:
        - console-controller
      operationId: updateConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Console'
        required: true
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - console-controller
      operationId: createConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Console'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  /purchase:
    post:
      tags:
        - invoice-controller
      operationId: makePurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/tshirts/{id}':
    get:
      tags:
        - tshirt-controller
      operationId: getTshirt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tshirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - tshirt-controller
      operationId: deleteTshirt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/tshirts/size/{size}':
    get:
      tags:
        - tshirt-controller
      operationId: getAllTshirtBySize
      parameters:
        - name: size
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tshirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/tshirts/color/{color}':
    get:
      tags:
        - tshirt-controller
      operationId: getAllTshirtByColor
      parameters:
        - name: color
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tshirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/invoice/{id}':
    get:
      tags:
        - invoice-controller
      operationId: getInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/games/{id}':
    get:
      tags:
        - games-controller
      operationId: getGames
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Games'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - games-controller
      operationId: deleteGame
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/games/title/{title}':
    get:
      tags:
        - games-controller
      operationId: getAllGamesByTitle
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Games'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/games/studio/{studio}':
    get:
      tags:
        - games-controller
      operationId: getAllGamesByStudio
      parameters:
        - name: studio
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Games'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/games/esrb/{esrb}':
    get:
      tags:
        - games-controller
      operationId: getAllGamesByESRB
      parameters:
        - name: esrb
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Games'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/consoles/{id}':
    get:
      tags:
        - console-controller
      operationId: getConsoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - console-controller
      operationId: deleteConsole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
  '/consoles/manufacturer/{manufacturer}':
    get:
      tags:
        - console-controller
      operationId: getAllConsolesByManufacturer
      parameters:
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomErrorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/CustomErrorResponse'
components:
  schemas:
    CustomErrorResponse:
      type: object
      properties:
        errorMsg:
          type: string
        status:
          type: integer
          format: int32
        errorCode:
          type: string
        timestamp:
          type: string
          format: date-time
    Tshirt:
      type: object
      properties:
        tshirtId:
          type: integer
          format: int32
        size:
          type: string
        color:
          type: string
        description:
          type: string
        price:
          type: number
        quantity:
          type: integer
          format: int32
    Games:
      type: object
      properties:
        gameId:
          type: integer
          format: int32
        title:
          type: string
        esrbRating:
          type: string
        description:
          type: string
        price:
          type: number
        studio:
          type: string
        quantity:
          type: integer
          format: int32
    Console:
      type: object
      properties:
        consoleId:
          type: integer
          format: int32
        model:
          type: string
        manufacturer:
          type: string
        memoryAmount:
          type: string
        processor:
          type: string
        price:
          type: number
        quantity:
          type: integer
          format: int32
    PurchaseRequest:
      required:
        - city
        - itemType
        - name
        - state
        - street
        - zip
      type: object
      properties:
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          maxLength: 2
          minLength: 2
          type: string
        zip:
          maxLength: 5
          minLength: 5
          type: string
        itemType:
          type: string
        itemID:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    Invoice:
      type: object
      properties:
        invoiceID:
          type: integer
          format: int32
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        itemType:
          type: string
        itemId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
        subtotal:
          type: number
        tax:
          type: number
        total:
          type: number
        processingFee:
          type: number
  spring:
    security:
      oauth2:
        client:
          registration:
            github:
              clientId: edbe1b2735c8aebd69ee
              clientSecret: e8b61d9b07ce243eb529906a0a18840e3ab5be78
# ...